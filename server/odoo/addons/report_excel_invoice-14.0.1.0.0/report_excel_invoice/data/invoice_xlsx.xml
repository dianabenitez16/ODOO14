<?xml version='1.0' encoding='UTF-8' standalone='yes'?>
<odoo>
  <!--    <data noupdate="0"></data> -->
  <data noupdate="1">
    <record id="report_excel_8" model="report.excel">
      <field name="out_file_name">('Invoice' if obj.name != '/' else 'Draft Invoice') + ('_' + obj.partner_id.display_name if obj.partner_id.display_name else '') + ('_' + obj.name if obj.name else '') + ('_' + datetime.strftime(obj.invoice_date, "%d-%m-%Y") if obj.invoice_date else '')</field>
      <field name="name">Customer Invoice (XLSX)</field>
      <field name="sheet_reference">Sales Invoice</field>
      <field name="description">Customer Invoice  (XLSX)</field>
      <field name="description_report">Customer Invoice 
</field>
      <field name="root_model_id" model="report.excel" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
    </record>
    <record id="report_excel_template_attachment_498" model="ir.attachment">
      <field name="name">customer_invoice_template.xlsx</field>
      <field name="type">binary</field>
      <field name="datas" type="base64" file="report_excel_invoice/static/template/customer_invoice_template.xlsx"/>
      <field name="res_id" ref="report_excel_8"/>
      <field name="res_model">report.excel</field>
    </record>
    <record id="report_excel_template_attachment_497" model="ir.attachment">
      <field name="name">customer_invoice_template_example.xlsx</field>
      <field name="type">binary</field>
      <field name="datas" type="base64" file="report_excel_invoice/static/template/customer_invoice_template_example.xlsx"/>
      <field name="res_id" ref="report_excel_8"/>
      <field name="res_model">report.excel</field>
    </record>
    <record id="report_excel_section_12" model="report.excel.section">
      <field name="report_excel_id" ref="report_excel_8"/>
      <field name="root_model_id" model="report.excel.section" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="sequence">10</field>
      <field name="name">Section 1 - Invoice Header, Footer</field>
      <field name="parent_id" eval="[]"/>
      <field name="type_data">data_line</field>
      <field name="level" eval="0"/>
      <field name="root_model_related_field_id" eval="[]"/>
      <field name="root_model_name">account.move</field>
      <field name="check_root_model">True</field>
      <field name="section" eval="False"/>
      <field name="section_level">1</field>
      <field name="section_start">A1</field>
      <field name="section_end">S35</field>
      <field name="domain">[]</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_60" model="report.excel.fields">
      <field name="sequence">100</field>
      <field name="cell">A1</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_61" model="report.excel.fields">
      <field name="sequence">101</field>
      <field name="cell">A2</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.report_header</field>
      <field name="field_type">text</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_62" model="report.excel.fields">
      <field name="sequence">102</field>
      <field name="cell">A4</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula">True</field>
      <field name="formulas">result = cell(A4) + ' ' + cell(O29) +'\n' + cell(P29) + ' '  + cell(N4) + ' '  + cell(R29) +'\n' + cell(S29)</field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.street</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_63" model="report.excel.fields">
      <field name="sequence">103</field>
      <field name="cell">N4</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.state_id.code</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_64" model="report.excel.fields">
      <field name="sequence">104</field>
      <field name="cell">K4</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">date</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">invoice_date</field>
      <field name="field_type">date</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_65" model="report.excel.fields">
      <field name="sequence">105</field>
      <field name="cell">K5</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">name</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_66" model="report.excel.fields">
      <field name="sequence">106</field>
      <field name="cell">K6</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">ref</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_67" model="report.excel.fields">
      <field name="sequence">107</field>
      <field name="cell">A11</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula">True</field>
      <field name="formulas">pure_address = ''
for line in cell(A11).split('\n'):
  if line.strip():
    pure_address = pure_address + line + '\n'
result = pure_address</field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">partner_id.contact_address</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_68" model="report.excel.fields">
      <field name="sequence">108</field>
      <field name="cell">A17</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">user_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_69" model="report.excel.fields">
      <field name="sequence">110</field>
      <field name="cell">C17</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">source_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_70" model="report.excel.fields">
      <field name="sequence">111</field>
      <field name="cell">I11</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula">True</field>
      <field name="formulas">pure_address = ''
for line in cell(I11).split('\n'):
  if line.strip():
    pure_address = pure_address + line + '\n'
result = pure_address</field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">partner_shipping_id.contact_address</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_71" model="report.excel.fields">
      <field name="sequence">112</field>
      <field name="cell">I17</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">date</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">invoice_date_due</field>
      <field name="field_type">date</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_72" model="report.excel.fields">
      <field name="sequence">113</field>
      <field name="cell">K22</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">currency_id.symbol</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_73" model="report.excel.fields">
      <field name="sequence">114</field>
      <field name="cell">K23</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">currency_id.symbol</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_74" model="report.excel.fields">
      <field name="sequence">115</field>
      <field name="cell">K24</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">currency_id.symbol</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_75" model="report.excel.fields">
      <field name="sequence">116</field>
      <field name="cell">L22</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">amount_untaxed</field>
      <field name="field_type">monetary</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_76" model="report.excel.fields">
      <field name="sequence">117</field>
      <field name="cell">L23</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">amount_tax</field>
      <field name="field_type">monetary</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_77" model="report.excel.fields">
      <field name="sequence">118</field>
      <field name="cell">L24</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">amount_total</field>
      <field name="field_type">monetary</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_78" model="report.excel.fields">
      <field name="sequence">119</field>
      <field name="cell">G17</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">invoice_payment_term_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_79" model="report.excel.fields">
      <field name="sequence">120</field>
      <field name="cell">E17</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">invoice_incoterm_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_80" model="report.excel.fields">
      <field name="sequence">121</field>
      <field name="cell">A28</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula">True</field>
      <field name="formulas">result = 'Should you have any enquiries concerning this invoice, please contact ' + cell(A28) + (' on ' + cell(O28) if cell(O28) else '')</field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">user_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_81" model="report.excel.fields">
      <field name="sequence">122</field>
      <field name="cell">O28</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">user_id.phone</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_82" model="report.excel.fields">
      <field name="sequence">123</field>
      <field name="cell">A29</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula">True</field>
      <field name="formulas">result = cell(A29) + (' ' + cell(O29) if cell(O29) else '') + (', ' + cell(P29) if cell(P29) else '') + (', ' + cell(Q29) if cell(Q29) else '') + (', ' + cell(R29) if cell(R29) else '') + (', ' + cell(S29) if cell(S29) else '')</field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.street</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_83" model="report.excel.fields">
      <field name="sequence">124</field>
      <field name="cell">O29</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.street2</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_84" model="report.excel.fields">
      <field name="sequence">125</field>
      <field name="cell">P29</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.city</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_85" model="report.excel.fields">
      <field name="sequence">126</field>
      <field name="cell">Q29</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.state_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_86" model="report.excel.fields">
      <field name="sequence">127</field>
      <field name="cell">R29</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.zip</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_87" model="report.excel.fields">
      <field name="sequence">128</field>
      <field name="cell">S29</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.country_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_88" model="report.excel.fields">
      <field name="sequence">129</field>
      <field name="cell">A30</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula">True</field>
      <field name="formulas">result = ('Phone: ' + cell(A30) if cell(O30) else '') + (' E-mail: ' + cell(O30) if cell(O30) else '') + (' Website: ' + cell(P30) if cell(P30) else '')</field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.phone</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_89" model="report.excel.fields">
      <field name="sequence">130</field>
      <field name="cell">O30</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.email</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_90" model="report.excel.fields">
      <field name="sequence">131</field>
      <field name="cell">P30</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id.website</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_91" model="report.excel.fields">
      <field name="sequence">132</field>
      <field name="cell">A26</field>
      <field name="report_excel_section_id" ref="report_excel_section_12"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula">True</field>
      <field name="formulas">result = "Make all checks payable to " + cell(A26) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move')], limit=1).id"/>
      <field name="root_model_name">account.move</field>
      <field name="model_field_selector">company_id</field>
      <field name="field_type">many2one</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_section_13" model="report.excel.section">
      <field name="root_model_id" model="report.excel.section" eval="obj().env['ir.model'].search([('model', '=', 'account.move.line')], limit=1).id"/>
      <field name="sequence">10</field>
      <field name="name">Section 1-1 - Invoice Lines</field>
      <field name="parent_id" ref="report_excel_section_12"/>
      <field name="type_data">data_line</field>
      <field name="level" eval="0"/>
      <field name="root_model_related_field_id" ref="account.field_account_move__invoice_line_ids"/>
      <field name="root_model_name">account.move.line</field>
      <field name="check_root_model">True</field>
      <field name="section">True</field>
      <field name="section_level">1</field>
      <field name="section_start">A20</field>
      <field name="section_end">N20</field>
      <field name="domain">[]</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_92" model="report.excel.fields">
      <field name="sequence">100</field>
      <field name="cell">G20</field>
      <field name="report_excel_section_id" ref="report_excel_section_13"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move.line')], limit=1).id"/>
      <field name="root_model_name">account.move.line</field>
      <field name="model_field_selector">quantity</field>
      <field name="field_type">float</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_93" model="report.excel.fields">
      <field name="sequence">100</field>
      <field name="cell">A20</field>
      <field name="report_excel_section_id" ref="report_excel_section_13"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move.line')], limit=1).id"/>
      <field name="root_model_name">account.move.line</field>
      <field name="model_field_selector">display_name</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_94" model="report.excel.fields">
      <field name="sequence">100</field>
      <field name="cell">I20</field>
      <field name="report_excel_section_id" ref="report_excel_section_13"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move.line')], limit=1).id"/>
      <field name="root_model_name">account.move.line</field>
      <field name="model_field_selector">price_unit</field>
      <field name="field_type">float</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_95" model="report.excel.fields">
      <field name="sequence">100</field>
      <field name="cell">K20</field>
      <field name="report_excel_section_id" ref="report_excel_section_13"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move.line')], limit=1).id"/>
      <field name="root_model_name">account.move.line</field>
      <field name="model_field_selector">price_subtotal</field>
      <field name="field_type">monetary</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_96" model="report.excel.fields">
      <field name="sequence">100</field>
      <field name="cell">N20</field>
      <field name="report_excel_section_id" ref="report_excel_section_13"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move.line')], limit=1).id"/>
      <field name="root_model_name">account.move.line</field>
      <field name="model_field_selector">display_name</field>
      <field name="field_type">char</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_fields_97" model="report.excel.fields">
      <field name="sequence">100</field>
      <field name="cell">J20</field>
      <field name="report_excel_section_id" ref="report_excel_section_13"/>
      <field name="group_by" eval="False"/>
      <field name="aggregate" eval="False"/>
      <field name="aggregate_id" eval="[]"/>
      <field name="having_operator" eval="False"/>
      <field name="having_selection">value</field>
      <field name="having_param_id" eval="[]"/>
      <field name="having_value_type">float</field>
      <field name="having_value_float" eval="0.0"/>
      <field name="having_value_date" eval="False"/>
      <field name="having_value_datetime" eval="False"/>
      <field name="sort_by" eval="False"/>
      <field name="formula" eval="False"/>
      <field name="formulas"># Help with Python expressions 

# The following variables can be used:
#  - uid: is the current user’s database id
#  - user: is the current user’s record
#  - date, datetime, dateutil: useful Python libraries 
#  - param(parameter_code): Report Parameter, for example  param(Parameter1_start_date)
#  - cell(CELL_COORDINATE): Excel Cell of the current Section,  for example  cell(A7) 

# Note: returned value have to be set in the variable 'result' 

# Example of Python code:
# if (cell(A7) == "out_invoice"):
#   result = cell(H7) * -1
# else:
#   result = cell(H7) </field>
      <field name="check_root_model">True</field>
      <field name="root_model_id" model="report.excel.fields" eval="obj().env['ir.model'].search([('model', '=', 'account.move.line')], limit=1).id"/>
      <field name="root_model_name">account.move.line</field>
      <field name="model_field_selector">tax_ids</field>
      <field name="field_type">many2many</field>
      <field name="image_bool" eval="False"/>
      <field name="colOff" eval="0"/>
      <field name="rowOff" eval="0"/>
      <field name="cx">1500000</field>
      <field name="cy">1500000</field>
      <field name="description" eval="False"/>
    </record>
    <record id="report_excel_8_action1" model="ir.actions.act_window">
      <field name="name">Customer Invoice (XLSX)</field>
      <field name="type">ir.actions.act_window</field>
      <field name="res_model">report_excel_wizard</field>
      <field name="view_mode">form</field>
      <field name="view_id" model="report.excel" eval="obj().env['ir.ui.view'].search([('model', '=', 'report_excel_wizard')]).id"/>
      <field name="target">new</field>
      <field name="context" eval="{'model': 'report.excel', 'id': ref('report_excel_8')}"/>
    </record>
    <record id="report_excel_8" model="report.excel">
      <field name="template_name_id" ref="report_excel_template_attachment_498"/>
    </record>
  </data>
</odoo>
